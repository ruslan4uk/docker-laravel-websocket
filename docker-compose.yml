version: '3'

services:
  nginx:
    image: nginx:1.17
    restart: always
    ports:
      # frontend
#      - 80:80
      - 443:443
      # backend
      - 80:8000
    working_dir: ${APP_PATH_CONTAINER}
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    user: 1000:1000

  php:
    build: ./php
    restart: always
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}/backend
    environment:
      - APP_PATH_HOST=${APP_PATH_HOST}
      - APP_PATH_CONTAINER=${APP_PATH_CONTAINER}
    ports:
      - 9001:9001
    user: 1000:1000

  db:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ${DB_PATH_HOST}:/var/lib/mysql
    user: 1000:1000

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080

  composer:
    image: composer
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}/backend
    command: composer install
    user: 1000:1000

  redis:
    image: redis:5.0-alpine
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./storage/redis/data:/data
    command: ["sh", "-c", "exec redis-server --requirepass \"${REDIS_PASSWORD}\""]
    user: 1000:1000

  nodejs:
    image: node:10.16.3-alpine
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}/backend
    ports:
      # broadcast
      # sh -c "yarn install && yarn run dev && yarn run pm2 start laravel-echo-server.js"
      - 6001:6001
#    command: >
#      sh -c "npm install -g laravel-echo-server && node laravel-echo-server.js"
    user: 1000:1000






